<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
<title>publiclab.com</title>
<description>
Open source environmental science research at Public Lab
</description>
<link>https://sagarpreet-chadha.github.io/iftttTesting.rss</link>
<atom:link href="https://sagarpreet-chadha.github.io/iftttTesting.rss" rel="self" type="application/rss+xml" />
<item>
<title>Kilimanjaro Citizen Science - KCS-1</title>
<author>cutlan@gmail.com (shdbj jsjdk)</author>
<pubDate>Tue, 09 Jan 2018 17:28:44 +0000</pubDate>
<link>
https://publiclab.org/notes/cutlan/01-09-2018/kilimanjaro-citizen-science-1
</link>
<description>
item1
</description>
<guid>https://publiclab.org/notes/show/15493</guid>
</item>
<item>
<title>Built the entry level paperkit</title>
<author>Swede2@gmail.com (dsjn sdbmbd)</author>
<pubDate>Sun, 07 Jan 2018 16:22:16 +0000</pubDate>
<link>
https://publiclab.org/notes/Swede2/01-07-2018/built-the-entry-level-paperkit
</link>
<description>
item2
</description>
<guid>https://publiclab.org/notes/show/15472</guid>
</item>
<item>
<title>Water Availability and Vulnerability</title>
<author>gilbert@gmail.com (jdksfjs kjdskd)</author>
<pubDate>Fri, 05 Jan 2018 18:24:12 +0000</pubDate>
<link>
https://publiclab.org/notes/gilbert/01-05-2018/water-availability-vulnerability
</link>
<description>
item3
</description>
<guid>https://publiclab.org/notes/show/15462</guid>
</item>
  <item>
<title> Testing </title>
<author>gilbert@gmail.com (test name)</author>
<pubDate>Fri, 05 Jan 2018 18:24:12 +0000</pubDate>
<link>
https://publiclab.org/notes/gilbert/01-05-2018/water-availability-vulnerability
</link>
<description>
item4
</description>
<guid>https://publiclab.org/notes/show/15459</guid>
</item>
  <item>
<title> Testing </title>
<author>gilbert@gmail.com (test name)</author>
<pubDate>Fri, 05 Jan 2018 18:24:12 +0000</pubDate>
<link>
https://publiclab.org/notes/gilbert/01-05-2018/water-availability-vulnerability
</link>
<description>
item5
</description>
<guid>https://publiclab.org/notes/show/154529</guid>
</item>
   <item>
<title> Testing </title>
<author>gilbert@gmail.com (test name)</author>
<pubDate>Fri, 05 Jan 2018 18:24:12 +0000</pubDate>
<link>
https://publiclab.org/notes/gilbert/01-05-2018/water-availability-vulnerability
</link>
<description>
<![CDATA[
  Image inside RSS
  <img src="http://www.publiclab.org/system/images/photos/000/023/122/medium/PIC2.jpg" alt="Smiley face">         
]]>
</description>
<guid>https://publiclab.org/notes/show/1548529</guid>
</item>
  <item>
<title> Testing Ho rhi hai </title>
<author>kaun@gmail.com (kaun name)</author>
<pubDate>Fri, 05 Jan 2018 18:24:12 +0000</pubDate>
<link>
https://publiclab.org/notes/gilbert/01-05-2018/water-availability-vulnerability
</link>
<description>
<![CDATA[
  <img src="http://www.publiclab.org/system/images/photos/000/023/122/medium/PIC2.jpg" alt="Smiley face">         
]]>
</description>
<guid>https://publiclab.org/notes/show/154788529</guid>
</item>
   <item>
<title> AGAIN TESTING !! </title>
<author>kaun@gmail.com (kaun name)</author>
<pubDate>Fri, 05 Jan 2018 18:24:12 +0000</pubDate>
<link>
https://publiclab.org/notes/gilbert/01-05-2018/water-availability-vulnerability
</link>
<description>
<![CDATA[
  <img src="http://img02.mini.abroad.imgcdc.com/english/photos/fun/90/20170711/1017495_339353.jpg.680x425.jpg" alt="Smiley face">         
]]>
</description>
<guid>https://publiclab.org/notes/show/15423788529</guid>
</item>
   <item>
<title> AGAIN TESTING !! </title>
<author>kaun@gmail.com (kaun name)</author>
<pubDate>Fri, 05 Jan 2018 18:24:12 +0000</pubDate>
<link>
https://publiclab.org/notes/gilbert/01-05-2018/water-availability-vulnerability
</link>
<description>
<![CDATA[
  <img src="http://img02.mini.abroad.imgcdc.com/english/photos/fun/90/20170711/1017495_339353.jpg.680x425.jpg" alt="Smiley face">         
]]>
</description>
<guid>https://publiclab.org/notes/show/1542378852934</guid>
</item>
<item>
<title>
Python and openCV to analyze microscope slide images of airborne particles
</title>
<author>kaun@gmail.com (kaun name)</author>
<pubDate>Fri, 12 Jan 2018 23:21:08 +0000</pubDate>
<link>
https://publiclab.org/notes/amirberAgain/01-12-2018/python-and-opencv-to-analyze-microscope-slide-images-of-airborne-particles
</link>
<description>
  
    <![CDATA[ <img src='https://publiclab.org/system/images/photos/000/023/180/medium/image.png' alt='' >
    ]]>
  Following the Jan 9th air quality open call I wanted to see what can be done with a microscope slide image of airborne particles. Inspired by the work started by Mathew and Stevie a couple of years ago I set out to try and get a similar process running on Python using openCV and skimage. Based on an old tutorial to detect coins I repurposed it for a single slide example. Once more example images are obtained this process could be made more robust, could also be a great candidate for DL! --------- Below is a code walkthrough: 1\. load image, crop out the area with the scale on it.![image description](<a href="https://publiclab.org/system/images/photos/000/023/181/large/fullframe.png">https://publiclab.org/system/images/photos/000/023/181/large/fullframe.png</a> "fullframe.png") 2\. Use Sobel edge detection to find particles.![image description](<a href="https://publiclab.org/system/images/photos/000/023/182/large/Sobel.png">https://publiclab.org/system/images/photos/000/023/182/large/Sobel.png</a> "Sobel.png") 3\. Use a simple threshold to binarize the edges image.![image description](<a href="https://publiclab.org/system/images/photos/000/023/183/large/Sobel_TH.png">https://publiclab.org/system/images/photos/000/023/183/large/Sobel_TH.png</a> "Sobel_TH.png") 4\. Label binarized features.![image description](<a href="https://publiclab.org/system/images/photos/000/023/188/large/Objects.png">https://publiclab.org/system/images/photos/000/023/188/large/Objects.png</a> "Objects.png") 5\. Show area distribution of the particles![image description](<a href="https://publiclab.org/system/images/photos/000/023/189/large/ParticleBreakdown.png">https://publiclab.org/system/images/photos/000/023/189/large/ParticleBreakdown.png</a> "ParticleBreakdown.png") 6\. Sort and select only features which are larger than sizeTh (4 pX). - **NOTE: I made a lazy assumption that each pixel is 1 um, this parameter can be adapted in the code to show real scale, this is a pixel scale - NOT um!** Largest:![image description](<a href="https://publiclab.org/system/images/photos/000/023/185/large/Largest.png">https://publiclab.org/system/images/photos/000/023/185/large/Largest.png</a> "Largest.png") Smallest:![image description](<a href="https://publiclab.org/system/images/photos/000/023/186/large/Smallest.png">https://publiclab.org/system/images/photos/000/023/186/large/Smallest.png</a> "Smallest.png") 6\. TBC (use fractal dimension to detect if a particle is round or jagged). find a way to avoid false detection of two close particles, and from false detection of a section of large particles being reidentified by the label function.![image description](<a href="https://publiclab.org/system/images/photos/000/023/187/large/TwoObjects.png">https://publiclab.org/system/images/photos/000/023/187/large/TwoObjects.png</a> "TwoObjects.png")
</description>
<guid>https://publiclab.org/notes/show/15519</guid>
</item>
  <item>
<title>
Python and openCV to analyze microscope slide images of airborne particles [TEST 2ND]
</title>
<author>kaun@gmail.com (kaun name)</author>
<pubDate>Fri, 12 Jan 2018 23:21:08 +0000</pubDate>
<link>
https://publiclab.org/notes/amirberAgain/01-12-2018/python-and-opencv-to-analyze-microscope-slide-images-of-airborne-particles
</link>
<description>
<![CDATA[ <img src='https://publiclab.org/system/images/photos/000/023/180/medium/image.png' alt='' > ]]></p>Following the Jan 9th air quality open call I wanted to see what can be done with a microscope slide image of airborne particles. Inspired by the work started by Mathew and Stevie a couple of years ago I set out to try and get a similar process running on Python using openCV and skimage. Based on an old tutorial to detect coins I repurposed it for a single slide example. Once more example images are obtained this process could be made more robust, could also be a great candidate for DL! --------- Below is a code walkthrough: 1\. load image, crop out the area with the scale on it.![image description](<a href="https://publiclab.org/system/images/photos/000/023/181/large/fullframe.png">https://publiclab.org/system/images/photos/000/023/181/large/fullframe.png</a> "fullframe.png") 2\. Use Sobel edge detection to find particles.![image description](<a href="https://publiclab.org/system/images/photos/000/023/182/large/Sobel.png">https://publiclab.org/system/images/photos/000/023/182/large/Sobel.png</a> "Sobel.png") 3\. Use a simple threshold to binarize the edges image.![image description](<a href="https://publiclab.org/system/images/photos/000/023/183/large/Sobel_TH.png">https://publiclab.org/system/images/photos/000/023/183/large/Sobel_TH.png</a> "Sobel_TH.png") 4\. Label binarized features.![image description](<a href="https://publiclab.org/system/images/photos/000/023/188/large/Objects.png">https://publiclab.org/system/images/photos/000/023/188/large/Objects.png</a> "Objects.png") 5\. Show area distribution of the particles![image description](<a href="https://publiclab.org/system/images/photos/000/023/189/large/ParticleBreakdown.png">https://publiclab.org/system/images/photos/000/023/189/large/ParticleBreakdown.png</a> "ParticleBreakdown.png") 6\. Sort and select only features which are larger than sizeTh (4 pX). - **NOTE: I made a lazy assumption that each pixel is 1 um, this parameter can be adapted in the code to show real scale, this is a pixel scale - NOT um!** Largest:![image description](<a href="https://publiclab.org/system/images/photos/000/023/185/large/Largest.png">https://publiclab.org/system/images/photos/000/023/185/large/Largest.png</a> "Largest.png") Smallest:![image description](<a href="https://publiclab.org/system/images/photos/000/023/186/large/Smallest.png">https://publiclab.org/system/images/photos/000/023/186/large/Smallest.png</a> "Smallest.png") 6\. TBC (use fractal dimension to detect if a particle is round or jagged). find a way to avoid false detection of two close particles, and from false detection of a section of large particles being reidentified by the label function.![image description](<a href="https://publiclab.org/system/images/photos/000/023/187/large/TwoObjects.png">https://publiclab.org/system/images/photos/000/023/187/large/TwoObjects.png</a> "TwoObjects.png")
</description>
<guid>https://publiclab.org/notes/show/155134329</guid>
</item>
  <item>
<title>
Python and openCV to analyze microscope slide images of airborne particles [TEST 3rd]
</title>
<author> chadha.sagarpreet97@gmail.com ( @Sagarpreet_07 )</author>
<pubDate>Fri, 12 Jan 2018 23:21:08 +0000</pubDate>
<link>
https://publiclab.org/notes/amirberAgain/01-12-2018/python-and-opencv-to-analyze-microscope-slide-images-of-airborne-particles
</link>
<description>
<![CDATA[ <img src='https://publiclab.org/system/images/photos/000/023/180/medium/image.png' alt='' > ]]>
</description>
<guid>https://publiclab.org/notes/show/15513434553329</guid>
</item>
   <item>
<title>
Python and openCV to analyze microscope slide images of airborne particles [TEST 4th]
</title>
<author> chadha.sagarpreet97@gmail.com ( @Sagarpreet_07 )</author>
<pubDate>Fri, 12 Jan 2018 23:21:08 +0000</pubDate>
<link>
https://publiclab.org/notes/amirberAgain/01-12-2018/python-and-opencv-to-analyze-microscope-slide-images-of-airborne-particles
</link>
<description>
<![CDATA[ <img src='https://publiclab.org/system/images/photos/000/023/180/medium/image.png' alt='' > ]]>
</description>
<guid>https://publiclab.org/notes/show/433553329</guid>
</item>
  <item>
<title>
Python and openCV to analyze microscope slide images of airborne particles [TEST 5th]
</title>
    <author> <![CDATA[<a href="https://twitter.com/Sagarpreet_07">Sagarpreet_07</a>]]( @Sagarpreet_07 )</author>
<pubDate>Fri, 12 Jan 2018 23:21:08 +0000</pubDate>
<link>
https://publiclab.org/notes/amirberAgain/01-12-2018/python-and-opencv-to-analyze-microscope-slide-images-of-airborne-particles
</link>
<description>
<![CDATA[ <img src='https://publiclab.org/system/images/photos/000/023/180/medium/image.png' alt='' > ]]>
</description>
<guid>https://publiclab.org/notes/show/32243269</guid>
</item>
</channel>
</rss>
